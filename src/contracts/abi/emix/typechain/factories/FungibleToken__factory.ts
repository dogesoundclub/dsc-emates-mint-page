/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { FungibleToken } from "../FungibleToken";

export class FungibleToken__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    name: string,
    symbol: string,
    _version: string,
    overrides?: Overrides
  ): Promise<FungibleToken> {
    return super.deploy(
      name,
      symbol,
      _version,
      overrides || {}
    ) as Promise<FungibleToken>;
  }
  getDeployTransaction(
    name: string,
    symbol: string,
    _version: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(name, symbol, _version, overrides || {});
  }
  attach(address: string): FungibleToken {
    return super.attach(address) as FungibleToken;
  }
  connect(signer: Signer): FungibleToken__factory {
    return super.connect(signer) as FungibleToken__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FungibleToken {
    return new Contract(address, _abi, signerOrProvider) as FungibleToken;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "string",
        name: "_version",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PERMIT_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6101206040523480156200001257600080fd5b50604051620011f8380380620011f8833981016040819052620000359162000295565b8251839083906200004e90600390602085019062000122565b5080516200006490600490602084019062000122565b505081516200007c9150600590602084019062000122565b507f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6080819052835160208086019190912060a081905283518483012060c08190524660e0819052604051620000fc95943091019485526020850193909352604084019190915260608301526001600160a01b0316608082015260a00190565b60408051601f198184030181529190528051602090910120610100525062000363915050565b828054620001309062000326565b90600052602060002090601f0160209004810192826200015457600085556200019f565b82601f106200016f57805160ff19168380011785556200019f565b828001600101855582156200019f579182015b828111156200019f57825182559160200191906001019062000182565b50620001ad929150620001b1565b5090565b5b80821115620001ad5760008155600101620001b2565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620001f057600080fd5b81516001600160401b03808211156200020d576200020d620001c8565b604051601f8301601f19908116603f01168101908282118183101715620002385762000238620001c8565b816040528381526020925086838588010111156200025557600080fd5b600091505b838210156200027957858201830151818301840152908201906200025a565b838211156200028b5760008385830101525b9695505050505050565b600080600060608486031215620002ab57600080fd5b83516001600160401b0380821115620002c357600080fd5b620002d187838801620001de565b94506020860151915080821115620002e857600080fd5b620002f687838801620001de565b935060408601519150808211156200030d57600080fd5b506200031c86828701620001de565b9150509250925092565b600181811c908216806200033b57607f821691505b602082108114156200035d57634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a05160c05160e05161010051610e50620003a860003960006103b50152600061038c0152600061042b01526000610403015260006103dd0152610e506000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806354fd4d5011610097578063a457c2d711610066578063a457c2d714610215578063a9059cbb14610228578063d505accf1461023b578063dd62ed3e1461025057600080fd5b806354fd4d50146101bc57806370a08231146101c45780637ecebe00146101ed57806395d89b411461020d57600080fd5b806330adf81f116100d357806330adf81f1461016b578063313ce567146101925780633644e515146101a157806339509351146101a957600080fd5b806306fdde0314610105578063095ea7b31461012357806318160ddd1461014657806323b872dd14610158575b600080fd5b61010d610289565b60405161011a9190610bd7565b60405180910390f35b610136610131366004610c0d565b61031b565b604051901515815260200161011a565b6002545b60405190815260200161011a565b610136610166366004610c37565b610331565b61014a7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b6040516012815260200161011a565b61014a610388565b6101366101b7366004610c0d565b610479565b61010d6104b0565b61014a6101d2366004610c73565b6001600160a01b031660009081526020819052604090205490565b61014a6101fb366004610c73565b60066020526000908152604090205481565b61010d61053e565b610136610223366004610c0d565b61054d565b610136610236366004610c0d565b6105eb565b61024e610249366004610c8e565b6105f8565b005b61014a61025e366004610d01565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60606003805461029890610d34565b80601f01602080910402602001604051908101604052809291908181526020018280546102c490610d34565b80156103115780601f106102e657610100808354040283529160200191610311565b820191906000526020600020905b8154815290600101906020018083116102f457829003601f168201915b5050505050905090565b6000610328338484610897565b50600192915050565b6001600160a01b0383166000908152600160209081526040808320338452909152812054600019811461037257610372853361036d8685610d85565b610897565b61037d8585856109bb565b506001949350505050565b60007f00000000000000000000000000000000000000000000000000000000000000004614156103d757507f000000000000000000000000000000000000000000000000000000000000000090565b604080517f000000000000000000000000000000000000000000000000000000000000000060208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909161032891859061036d908690610d9c565b600580546104bd90610d34565b80601f01602080910402602001604051908101604052809291908181526020018280546104e990610d34565b80156105365780601f1061050b57610100808354040283529160200191610536565b820191906000526020600020905b81548152906001019060200180831161051957829003601f168201915b505050505081565b60606004805461029890610d34565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156105d45760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6105e13385858403610897565b5060019392505050565b60006103283384846109bb565b8342111561060557600080fd5b866001600160a01b0316866001600160a01b0316141561062457600080fd5b600061062e610388565b6001600160a01b038916600090815260066020526040812080547f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9928c928c928c9290919061067c83610db4565b909155506040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810187905260e001604051602081830303815290604052805190602001206040516020016106f592919061190160f01b81526002810192909252602282015260420190565b604051602081830303815290604052805190602001209050610717883b151590565b156107ee57604080516020810185905280820184905260f886901b6001600160f81b0319166060820152815160418183030181526061820192839052630b135d3f60e11b9092526001600160a01b038a1691631626ba7e9161077d918591606501610dcf565b60206040518083038186803b15801561079557600080fd5b505afa1580156107a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107cd9190610df0565b6001600160e01b031916631626ba7e60e01b146107e957600080fd5b610882565b6040805160008082526020820180845284905260ff871692820192909252606081018590526080810184905260019060a0016020604051602081039080840390855afa158015610842573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661086257600080fd5b886001600160a01b0316816001600160a01b03161461088057600080fd5b505b61088d888888610897565b5050505050505050565b6001600160a01b0383166108f95760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016105cb565b6001600160a01b03821661095a5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016105cb565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610a1f5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016105cb565b6001600160a01b038216610a815760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016105cb565b6001600160a01b03831660009081526020819052604090205481811015610af95760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016105cb565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610b30908490610d9c565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610b7c91815260200190565b60405180910390a350505050565b6000815180845260005b81811015610bb057602081850181015186830182015201610b94565b81811115610bc2576000602083870101525b50601f01601f19169290920160200192915050565b602081526000610bea6020830184610b8a565b9392505050565b80356001600160a01b0381168114610c0857600080fd5b919050565b60008060408385031215610c2057600080fd5b610c2983610bf1565b946020939093013593505050565b600080600060608486031215610c4c57600080fd5b610c5584610bf1565b9250610c6360208501610bf1565b9150604084013590509250925092565b600060208284031215610c8557600080fd5b610bea82610bf1565b600080600080600080600060e0888a031215610ca957600080fd5b610cb288610bf1565b9650610cc060208901610bf1565b95506040880135945060608801359350608088013560ff81168114610ce457600080fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215610d1457600080fd5b610d1d83610bf1565b9150610d2b60208401610bf1565b90509250929050565b600181811c90821680610d4857607f821691505b60208210811415610d6957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600082821015610d9757610d97610d6f565b500390565b60008219821115610daf57610daf610d6f565b500190565b6000600019821415610dc857610dc8610d6f565b5060010190565b828152604060208201526000610de86040830184610b8a565b949350505050565b600060208284031215610e0257600080fd5b81516001600160e01b031981168114610bea57600080fdfea2646970667358221220b6e8f26c19e42076727728989e43b3c04c29afc83fb58d9e8af4acdfdc4b638564736f6c63430008090033";
